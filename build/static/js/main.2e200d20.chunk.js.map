{"version":3,"sources":["components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["NewExpense","props","useState","isEditing","setIsEditing","className","onClick","onSaveExpenseData","enteredExpenseData","expenseData","id","Math","random","toString","console","log","onAddExpense","onCancel","Card","classes","children","ExpenseFilter","value","selected","onChange","e","yearData","target","showYearHandler","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","classname","ExpenseItem","title","setTitle","amount","ExpensesList","items","length","map","expense","data","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","Date","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"+XAqCeA,EAhCI,SAACC,GAClB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAwBA,OAAO,sBAAKC,UAAU,cAAf,WACHF,GAAa,wBAAQG,QAbG,WAC1BF,GAAa,IAYE,6BACdD,GAAa,cAAC,EAAD,CAAaI,kBAxBE,SAACC,GAC9B,IAAMC,EAAW,2BACZD,GADY,IAEfE,GAAIC,KAAKC,SAASC,aAEpBC,QAAQC,IAAIN,GACZR,EAAMe,aAAaP,GACnBL,GAAa,IAiByDa,SAVpD,WAClBb,GAAa,UChBFc,G,MALF,SAACjB,GACZ,IAAMkB,EAAU,QAAUlB,EAAMI,UAChC,OAAO,qBAAKA,UAAWc,EAAhB,SAA0BlB,EAAMmB,aCwB1BC,G,YAxBO,SAACpB,GAQrB,OACE,qBAAKI,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQiB,MAAOrB,EAAMsB,SAAUC,SAVb,SAACC,GACvB,IAAMC,EAAWD,EAAEE,OAAOL,MAE1BrB,EAAM2B,gBAAgBF,IAOlB,UACE,wBAAQJ,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCHKO,G,KAfK,SAAC5B,GACnB,IAAM6B,EAAQ7B,EAAM8B,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMhC,EAAM8B,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOjC,EAAM8B,KAAKI,cAExB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAK/B,UAAU,sBAAf,SAAsCyB,IACtC,qBAAKzB,UAAU,sBAAf,SAAsC6B,IACtC,qBAAK7B,UAAU,sBAAf,SAAsC4B,SCuB7BI,EA5BK,SAACpC,GAEnB,MAA0BC,mBAASD,EAAMqC,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KACAzB,QAAQC,IAAI,kCAWZ,OACE,6BACE,eAAC,EAAD,CAAMV,UAAU,eAAhB,UACE,cAAC,EAAD,CAAa0B,KAAM9B,EAAM8B,OACzB,sBAAK1B,UAAU,4BAAf,UACE,6BAAKJ,EAAMqC,QACX,sBAAKjC,UAAU,sBAAf,cAAuCJ,EAAMuC,aAE/C,wBAAQlC,QAdO,WACnBiC,EAAS,YACTzB,QAAQC,IAAIuB,IAYR,gCCPOG,G,MAhBM,SAAAxC,GAGnB,OAA2B,IAAvBA,EAAMyC,MAAMC,OACP,oBAAItC,UAAU,0BAAd,gCAIP,oBAAIA,UAAU,gBAAd,SACGJ,EAAMyC,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAA8BP,MAAOO,EAAQP,MAAOE,OAAQK,EAAQL,OAAQM,KAAMD,EAAQd,MAAxEc,EAAQnC,W,QCOnBqC,G,MAlBE,SAAC9C,GAChB,IAAI+C,EAAgB,KAOpB,OALI/C,EAAMgD,SAAW,IACnBD,EAAgBrC,KAAKuC,MAAOjD,EAAMqB,MAAQrB,EAAMgD,SAAY,KAAO,KAKnE,sBAAK5C,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,iBAAiB8C,MAAO,CAAEC,OAAQJ,OAEnD,qBAAK3C,UAAU,mBAAf,SAAmCJ,EAAMoD,aCWhCC,G,MAvBD,SAACrD,GAGb,IAAMsD,EAAkBtD,EAAMuD,WAAWZ,KAAI,SAAAa,GAAS,OAAIA,EAAUnC,SAE9DoC,EAAe/C,KAAKgD,IAAL,MAAAhD,KAAI,YAAQ4C,IAEjC,OAEE,qBAAKlD,UAAU,QAAf,SACGJ,EAAMuD,WAAWZ,KAAI,SAACa,GAAD,OACpB,cAAC,EAAD,CAEEnC,MAAOmC,EAAUnC,MACjB2B,SAAUS,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCYVO,EAzBO,SAAC3D,GACrB,IAD+B,EACzB4D,EAAkB,CACtB,CAAER,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,GACvB,CAAE+B,MAAO,MAAO/B,MAAO,IAbM,cAiBTrB,EAAM6D,UAjBG,IAiB/B,2BAAsC,CAAC,IAA5BjB,EAA2B,QAEpCgB,EADqBhB,EAAQd,KAAKgC,YACJzC,OAASuB,EAAQL,QAnBlB,8BAsB/B,OAAO,cAAC,EAAD,CAAOgB,WAAYK,KC8BbG,EA9CE,SAAC/D,GAEhB,MAAwCC,mBAAS,QAAjD,mBAAO+D,EAAP,KAAqBC,EAArB,KAQMC,EAAmBlE,EAAMyC,MAAM0B,QAAO,SAAAvB,GAC1C,OAAOA,EAAQd,KAAKI,cAActB,aAAeoD,KAanD,OACE,8BACE,eAAC,EAAD,CAAM5D,UAAU,WAAhB,UACE,cAAC,EAAD,CAAekB,SAAU0C,EAAcrC,gBAvBjB,SAACyC,GAC3BH,EAAgBG,GAChBvD,QAAQC,IAAIkD,MA2BR,cAAC,EAAD,CAAeH,SAAUK,IACzB,cAAC,EAAD,CAAczB,MAAOyB,UCvCvBG,EAAiB,CACrB,CACE5D,GAAI,KACJ4B,MAAO,eACPE,OAAQ,MACRT,KAAM,IAAIwC,KAAK,KAAM,EAAG,KAE1B,CAAE7D,GAAI,KAAM4B,MAAO,SAAUE,OAAQ,OAAQT,KAAM,IAAIwC,KAAK,KAAM,EAAG,KACrE,CACE7D,GAAI,KACJ4B,MAAO,gBACPE,OAAQ,OACRT,KAAM,IAAIwC,KAAK,KAAM,EAAG,KAE1B,CACE7D,GAAI,KACJ4B,MAAO,oBACPE,OAAQ,IACRT,KAAM,IAAIwC,KAAK,KAAM,EAAG,MAoCbC,EAjCH,WAEV,MAAgCtE,mBAASoE,GAAzC,mBAAOR,EAAP,KAAiBW,EAAjB,KAsBA,OACE,gCACE,cAAC,EAAD,CAAYzD,aApBU,SAAA6B,GAGxB4B,GAAY,SAACC,GACX,MAAM,CAAE7B,GAAR,mBAAoB6B,UAiBpB,cAAC,EAAD,CAAUhC,MAAOoB,QChDvBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2e200d20.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './NewExpense';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    console.log(expenseData);\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditing = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  // communicate betqeen components and how you can communicate up\r\n  // make sure that a child component (expense form component) can communicate to the parent component\r\n\r\n  // for the button toggle, new to change the state\r\n  return <div className=\"new-expense\">\r\n    {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n    {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditing} />}\r\n\r\n  </div >\r\n};\r\n\r\nexport default NewExpense;","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = (props) => {\r\n\r\n  const pickYearHandler = (e) => {\r\n    const yearData = e.target.value;\r\n\r\n    props.showYearHandler(yearData);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={pickYearHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ExpenseFilter;","import './ExpenseItem.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div classname=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__month\">{year}</div>\r\n      <div className=\"expense-date__month\">{day}</div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;","import React, { useState } from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n  const [title, setTitle] = useState(props.title);\r\n  console.log('ExpenseItem evaluated by React');\r\n\r\n  // const expenseDate = new Date(2021, 2, 28);\r\n  // const expenseTitle = 'Car Insurance';\r\n  // const expenseAmount = 294.67;\r\n  const clickHandler = () => {\r\n    setTitle('Updated!');\r\n    console.log(title);\r\n  };\r\n\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        <button onClick={clickHandler}>Change Title</button>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\n\r\nconst ExpensesList = props => {\r\n\r\n\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} data={expense.date} />))\r\n      }\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"char-bar__fill\" style={{ height: barFillHeight }} ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  // transform the datapoints from objects to numbers\r\n  // we'll have an array of 12 values\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  // totalMax will receive 12 values which is from our qarray pulled out by the spread operator\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => Jan => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\n\r\n\r\nconst Expenses = (props) => {\r\n\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n    console.log(filteredYear);\r\n\r\n  }\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n\r\n  });\r\n\r\n  // let expensesContent = <p>No expenses found</p>;\r\n\r\n  // if (filteredExpenses.length > 0) {\r\n  //   expensesContent = filteredExpenses.length > 0 &&\r\n  //     (filteredExpenses.map((expense) =>\r\n  //       <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} data={expense.date} />));\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter selected={filteredYear} showYearHandler={filterChangeHandler} />\r\n        {/* {filteredExpenses.length === 0 && <p>No expenses found</p>}\r\n        {filteredExpenses.length > 0 &&\r\n          (filteredExpenses.map((expense) =>\r\n            <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} data={expense.date} />))} */}\r\n\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n\r\n        {/* \r\n        <ExpenseItem title={props.items[0].title} amount={props.items[0].amount} date={props.items[0]}></ExpenseItem>\r\n        <ExpenseItem title={props.items[1].title} amount={props.items[1].amount} date={props.items[1]}></ExpenseItem>\r\n        <ExpenseItem title={props.items[2].title} amount={props.items[2].amount} date={props.items[2]}></ExpenseItem>\r\n        <ExpenseItem title={props.items[3].title} amount={props.items[3].amount} date={props.items[3]}></ExpenseItem> */}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },];\n\nconst App = () => {\n  // initial expenses to display\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\n\n  const addExpenseHandler = expense => {\n    // upsdating state when its based on an older snapshot of that same state\n    // setExpenses([expense, ...expenses]);\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n\n\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}